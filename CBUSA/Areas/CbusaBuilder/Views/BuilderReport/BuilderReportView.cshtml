@using CBUSA.Models;
@model CBUSA.Areas.CbusaBuilder.Models.BuilderReportViewModel

<div class="table-responsive nPCQuartRebatReportTable">
    <table class="table" id="TblAdminReport">
        <thead class="thead-bg">
            <tr>

                @if (Model.ProjectListVM != null)
                {
                    <th width="15%" class="text-left"></th>
                    foreach (var ItemChild in Model.QuestionList)
                    {
                        <th class="text-center">@ItemChild.QuestionValue</th>
                    }
                }

            </tr>
        </thead>
        <tbody>
            @if (Model.ProjectListVM != null)
            {
                foreach (var Item in Model.ProjectListVM)
                {

                    <tr id="Tr_" @Item.ProjectId>
                        <td class="text-left">@(Item.rowcount + ".  " + Item.ProjectName + " ," + Item.LotNo + " ," + Item.State + " ," + Item.Address)</td>
                        @foreach (var ItemChild in Model.QuestionList)
                        {
                            <td class="text-center" data-role="TdAdminReport" id="TdMain_@(Item.ProjectId + ItemChild.QuestionId)">
                                @if (ItemChild.QuestionTypeId == (int)CBUSA.Domain.EnumQuestionType.TextBox)
                                {

                                    CBUSA.Areas.CbusaBuilder.Models.BuilderReportSubmitViewModel Result = Model.SubmitReport.Where(x => x.QuestionId == ItemChild.QuestionId && x.ProjectId == Item.ProjectId).FirstOrDefault();
                                    string Value = Result != null ? Result.Answer : "";
                                    @Html.AdminReportTextBoxTypeQuestion((ItemChild.QuestionTextBoxSetting), ItemChild.SurveyOrder, Item.ProjectId, Value)
                                }
                                else if (ItemChild.QuestionTypeId == (int)CBUSA.Domain.EnumQuestionType.DropList)
                                {
                                    CBUSA.Areas.CbusaBuilder.Models.BuilderReportSubmitViewModel Result = Model.SubmitReport.Where(x => x.QuestionId == ItemChild.QuestionId && x.ProjectId == Item.ProjectId).FirstOrDefault();
                                    string Value = Result != null ? Result.Answer : "";
                                    @Html.AdminReportDropListTypeQuestion(ItemChild.QuestionDropdownSetting, Value)
                                }
                                else
                                {
                                    List<CBUSA.Areas.CbusaBuilder.Models.BuilderReportSubmitViewModel> ResultList = Model.SubmitReport.Where(x => x.QuestionId == ItemChild.QuestionId && x.ProjectId == Item.ProjectId).ToList();
                                    @Html.AdminReportGridTypeQuestion(ItemChild.QuestionGridSetting.FirstOrDefault().QuestionGridSettingHeader, ResultList)
                                }

                                @if (ItemChild.QuestionTypeId == (int)CBUSA.Domain.EnumQuestionType.TextBox || ItemChild.QuestionTypeId == (int)CBUSA.Domain.EnumQuestionType.DropList)
                                {


                                    CBUSA.Areas.CbusaBuilder.Models.BuilderReportSubmitViewModel Result = Model.SubmitReport.Where(x => x.QuestionId == ItemChild.QuestionId && x.ProjectId == Item.ProjectId).FirstOrDefault();

                                    if (Result != null)
                                    {
                                        if (Result.FileName != null)
                                        {
                                            <div class="pull-right">
                                                <i title="" class="fa fa-eye editPreSarvyIcon" aria-hidden="true" onclick="ViewNcpRebateResultFile('@(Result.FileName)')"></i>
                                            </div>
                                        }


                                    }
                                }
                                <input type="hidden" name="HdnQuestionType" value="@ItemChild.QuestionTypeId" />
                                @switch (ItemChild.QuestionTypeId)
                                {
                                    case 1:    //Text Box Type
                                        <input type="hidden" name="HdnIsMandatory" value="@(ItemChild.IsMandatory.ToString())" />
                                        <input type="hidden" name="HdnIsFileNeedToUpload" value="@(ItemChild.IsFileNeedtoUpload.ToString())" />
                                        break;
                                    case 2:
                                        <input type="hidden" name="HdnIsMandatory" value="@(ItemChild.IsMandatory.ToString())" />
                                        <input type="hidden" name="HdnIsFileNeedToUpload" value="@(ItemChild.IsFileNeedtoUpload.ToString())" />
                                        break;
                                }
                                <input type="hidden" name="HdnQuestionId" value="@ItemChild.QuestionId" />
                                <input type="hidden" name="HdnProjectId" value="@Item.ProjectId" />
                                <input type="hidden" name="HdnFileName" value="" />

                            </td>
                        }
                    </tr>
                }
            }
        </tbody>
    </table>
</div>
<div id="DivIframeContainer" style="display:none;"></div>
@section scripts
{
    <script type="text/javascript">

        var AjaxCallUrl =
            {
                CustomProjectControlUrl: '@Url.Action("RenderProjectDropdown", "BuilderReport", new { Area = "CbusaBuilder" })',
                LoadBuilderReportViewUrl: '@Url.Action("LoadAdminReport", "BuilderReport", new { Area = "CbusaBuilder" })',
                AddBuilderReportViewUrl: '@Url.Action("LoadAdminReport", "BuilderReport", new { Area = "CbusaBuilder" })',
                SaveBuilderReportUrl: '@Url.Action("SaveAdminReport", "BuilderReport", new { Area = "CbusaBuilder" })',
                DownLoadFileUrl: '@Url.Action("DownloadResourceFile", "BuilderReport", new { Area = "CbusaBuilder" })',

            };


        function ViewNcpRebateResultFile(FileName) {

            var src = AjaxCallUrl.DownLoadFileUrl + '?FileName=' + FileName;

            var iframe = $("<iframe/>").load(function () {
                // $.unblockUI();
            }).attr({
                src: src
            }).appendTo($("#DivIframeContainer"));

        }

    </script>

    <script type="text/javascript">
        $(document).ready(function () {
            $("#TblAdminReport").find("input,button,textarea,select").attr("disabled", "disabled");
            //$("#TblAdminReport").prop("readonly", true);
        });

    </script>

}